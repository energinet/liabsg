#!/bin/sh
#
# Set the path
PATH=/bin:/sbin:/usr/bin:/usr/sbin
export PATH
#
inetparm() {
    # Test syntax.
    if [ "$#" -ne 1 ]; then
        echo $"Usage: inetparm [parameter string]"
        return 1
    fi
    local LIABIP="$1"

    local IP=`echo $LIABIP | cut -f1 -d,`
    if [ -z "$IP" ]; then
        echo $"Usage: inetparm [parameter string]"
        return 1
    fi
    local ipdec=$(( (`echo $IP | cut -f1 -d.` << 24) + \
        (`echo $IP | cut -f2 -d.` << 16) + \
        (`echo $IP | cut -f3 -d.` << 8) + \
        (`echo $IP | cut -f4 -d.`))) 
    local prefix=`echo "$LIABIP,,," | cut -f2 -d,`
    if [ -z "$prefix" ]; then 
        prefix=8
    fi

    local m=$(((0xffffffff << $prefix) & 0xffffffff)) # Mask
    local b=$(($ipdec | (~$m & 0xffffffff)))          # Bcast
    local n=$(($ipdec & $m))                          # Network

    local gw=`echo "$LIABIP,,," | cut -f3 -d,`
    if [ -z "$gw" ]; then
        gw=$(($n | 0x1))                              # Gateway
        gw="$((($gw>>24)&255)).$((($gw>>16)&255)).$((($gw>>8)&255)).$(($gw&255))"
    fi

    net="$((($n>>24)&255)).$((($n>>16)&255)).$((($n>>8)&255)).$(($n&255))"
    bcast="$((($b>>24)&255)).$((($b>>16)&255)).$((($b>>8)&255)).$(($b&255))"
    subnet="$((($m>>24)&255)).$((($m>>16)&255)).$((($m>>8)&255)).$(($m&255))"
    gateway="$gw"
    ip="$IP"
}

# mount /proc
mount -n -t proc /proc /proc

# mount /proc/bus/usb
mount -t usbfs usbfs /proc/bus/usb

# mount sysfs
if ! [ -d /sys ]; then
    mkdir /sys
fi
mount -t sysfs sysfs /sys


OPTIONSFILE=/tmp/optionsfile
rm -f $OPTIONSFILE
for NUM in 1 2 3 4 5 6 7 8 9 10 11 12 13 ; do
    cut -f$NUM -d" " /proc/cmdline >> $OPTIONSFILE
done
#
#
LIABIP=`grep "liabIP=" $OPTIONSFILE | cut -f2 -d"="`
#
if [ -z "$LIABIP" ]; then
    echo "No LIAB network string (\"liabIP=...\") found in the options from" 
    echo "command line. Manual configuration of the network needed..." 
else
  # Use inetparm to set variables: net, bcast, subnet, gateway and ip
    if ! inetparm $LIABIP; then
        echo "Malformed LIAB network string (\"liabIP=...\"),"
        echo "manual configuration of the network needed..."
    else
        echo "LIAB network string found (liabIP=$LIABIP)," 
        echo "trying to start network..."
        IP="$ip"
        NET="$net"
        BROADCAST="$bcast"
        SUBNETMASK="$subnet"
        GATEWAY="$gateway"
    #
    # NOW its time to enable the network:
    # ... First the loopback device:
        /sbin/ifconfig lo 127.0.0.1
        /sbin/route add -net 127.0.0.0 netmask 255.0.0.0 dev lo

        if grep "liabIP=DHCP" $OPTIONSFILE > /dev/null; then
            /sbin/udhcpc --pidfile=/var/run/udhcpc.pid
        else
    #
    # ... Then the Ethernet via eth0:
            /sbin/ifconfig eth0 $IP broadcast $BROADCAST netmask $SUBNETMASK
            /sbin/route add -host $IP eth0
            /sbin/route add -net  $NET netmask $SUBNETMASK eth0
            /sbin/route add default gw $GATEWAY eth0
            echo Setting up DNS and host.domain...
            LIABHOST=`grep "liabHOST=" $OPTIONSFILE | cut -f2 -d"="`
            if [ -z "$LIABHOST" ]; then 
                echo "No LIAB host string (\"liabHOST=...\"),"
                echo "hostname, domainname and DNS not set..."
            else
                echo "LIAB host string found (liabHOST=$LIABHOST)," 
                LIABHOSTDOMAIN=`echo $LIABHOST | cut -f1 -d","`
                LIABHOSTNAME=`echo $LIABHOSTDOMAIN | cut -f1 -d"."`
                /bin/hostname $LIABHOSTNAME
                HASDOT=`echo $LIABHOSTDOMAIN | grep "\."`
                if [ -n "$HASDOT" ]; then
                    LIABDOMAINNAME=`echo $LIABHOSTDOMAIN | cut -f2-9 -d"."`
                    /bin/domainname $LIABDOMAINNAME
                    echo "$IP $LIABHOSTNAME.$LIABDOMAINNAME   $LIABHOSTNAME" >> /etc/hosts
                else
                    echo "$IP $LIABHOSTNAME" >> /etc/hosts
                fi
                HASCOMMA=`echo $LIABHOST | grep ","`
                LIABDNS=`echo $LIABHOST | cut -f2 -d","`
                if [ -n "$HASCOMMA" -a -n "$LIABDNS" ]; then
                    echo Creating /etc/resolv.conf...
                    echo search $LIABDOMAIN > /etc/resolv.conf
                    echo nameserver $LIABDNS >> /etc/resolv.conf
                else
                    echo No DNS, relying on /etc/hosts...
                fi
            fi
        fi
    fi
fi

## Configure time and date
DEFAULTTZ="CET"
LIABTZ=`grep "liabTIMEZONE=" $OPTIONSFILE | cut -f2 -d"="`
if [ $LIABTZ ]; then
    if [ -f /etc/localtime ]; then
        rm /etc/localtime
    fi
    if [ -f /usr/share/zoneinfo/$LIABTZ ]; then
        ln -sf /usr/share/zoneinfo/$LIABTZ /etc/localtime
        echo $LIABTZ > /etc/timezone
    else
        echo "No such timezone ($LIABTZ) could be found. Reverting to $DEFAULTTZ"
        ln -sf /usr/share/zoneinfo/$DEFAULTTZ /etc/localtime
        echo $DEFAULTTZ > /etc/timezone
    fi
fi

#
# Start system loggers
echo Starting syslogd...
/usr/bin/daemon /sbin/syslogd -m 0
echo Starting klogd...
/usr/bin/daemon /sbin/klogd

